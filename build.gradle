plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "signing"
    id "checkstyle"
}

group = "org.embulk"
version = "0.4.0-SNAPSHOT"
description = "AWS client credential handler for Embulk plugins"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly "org.embulk:embulk-api:0.10.5"
    compileOnly "org.slf4j:slf4j-api:1.7.12"

    api "org.embulk:embulk-util-config:0.1.1"

    api("software.amazon.awssdk:auth:2.24.9") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        exclude group: "commons-logging", module: "commons-logging"   // commons-logging api is provided by jcl-over-slf4j
        exclude group: "joda-time", module: "joda-time"
    }
    api("software.amazon.awssdk:sts:2.24.9") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        exclude group: "commons-logging", module: "commons-logging"   // commons-logging api is provided by jcl-over-slf4j
        exclude group: "joda-time", module: "joda-time"
    }
    api("org.slf4j:jcl-over-slf4j:1.7.12") {  // aws-sdk uses Apache Commons Logging and Embulk uses slf4j
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    api "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    api "com.fasterxml.jackson.core:jackson-core:2.6.7"
    api "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    api "joda-time:joda-time:2.9.2"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    title = "${project.name} v${project.version}"
    options {
        locale = "en_US"
        encoding = "UTF-8"
        overview = "src/main/html/overview.html"
        links "https://docs.oracle.com/javase/8/docs/api/"
        links "https://dev.embulk.org/embulk-util-config/0.1.1/javadoc/"
        links "https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/"
    }
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

jar {
    from rootProject.file("LICENSE")
}

sourcesJar {
    from rootProject.file("LICENSE")
}

javadocJar {
    from rootProject.file("LICENSE")
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "${project.group}"
            artifactId = "${project.name}"

            from components.java
            // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
            // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                name = "${project.name}"
                description = "${project.description}"
                url = "https://www.embulk.org/"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Sadayuki Furuhashi"
                        email = "frsyuki@gmail.com"
                    }
                    developer {
                        name = "Satoshi Akama"
                        email = "satoshiakama@gmail.com"
                    }
                    developer {
                        name = "Dai MIKURUBE"
                        email = "dmikurube@treasure-data.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/embulk/embulk-util-aws-credentials.git"
                    developerConnection = "scm:git:git@github.com:embulk/embulk-util-aws-credentials.git"
                    url = "https://github.com/embulk/embulk-util-aws-credentials"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

checkstyle {
    toolVersion "8.7"
    configFile = file("${projectDir}/config/checkstyle/checkstyle.xml")
    configProperties = [
        "checkstyle.config.path": file("${projectDir}/config/checkstyle")
    ]
    ignoreFailures = false
    maxWarnings = 0  // https://github.com/gradle/gradle/issues/881
}
